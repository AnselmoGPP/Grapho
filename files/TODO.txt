Make Readme.md for knowing how to build the project
Upload to git
Doxygen comments

String variables containing paths
Progresive probability of finding certain stuff
terrain extender beyond limits (big numbers)
gui bar for shininess & specularStrength
Function for normals generation (and more encapsulations?)

LOD > Endless terrain (pixel circle) > Threading > Change resolution depending on distance from the viewer >
> not updating chunks in every frame (make the viewer move some distance before doing it (viewerMoveThresholdForChunckUpdate)) (remember that getting the square distance is faster than actual distance)

Pixel area (border's normals) (different LOD areas joints)

learnopengl

Bug:   terrainGenerator terrX = (worldChunks.chunkDict[k]);     // double free or corruption (!prev)
Class encapsulation of OpenGL functions
ImGui
Light cast
Compute MVP matrices only once
Pass parameters to the shader as uniforms (instead of hard-coding them in the shader)
Single VAO for all chuncks
BENCHMARK terrain generation (single VAO Vs multiple VAO)

terrainChunks:
        (X) Fog
        ( ) Don't show non-visible chunks
        ( ) Low level of detail far away
	( ) When fixing borders normals, don't compute noise again if it can be taken from the chunk next to it
	(X) Rounded area
	(X) Follow the camera
	(X) Don't send again to GPU already sent chunks
	(X) Hay acumulaciÃ³n de chunks creciente al avanzar?? No lo es
	(X) Encapsular terrain rendering
	(X) Ommit first terrain creation

--- Issues ------------------
Vertex data (vertex, color, texture coords, indices) passed directly to a ModelData object. Problem:
If such data is passed by reference, the user has to wait until the data is loaded after fullConstructor().
If it is passed by value, user don't have to worry.

Constructor sets flag dataFromFile and fullyConstructed
fullConstruction uses dataFromFile
User uses fullyConstructed for knowing how long ModelData needs the data visible 
Alternatively, dont include fullyConstructed, but copy data directly

--- Visual code ------------------
Doesn't detect macros declared in CMakeLists.txt
Doesn't have key combination for "save all"

----------------------------------

Doxygen comments (including documenting files)

----------------------------------
----- ERRORS -----
----------------------------------
I modified the glfw library:
glfw3.h   ->   I modified line 210. Instead of:
   #include <GL/gl.h>
I put:
  #if !defined(GLFW_INCLUDE_VULKAN)	// ans
   #include <GL/gl.h>
  #endif							// ans
  
----------
My "Lenovo" says:
hank@hank-Lenovo-Z50-70:~/eclipse-workspace/Vulkan/extern/vulkansdk-linux-x86_64-1.2.170.0/1.2.170.0/samples/_BUILD/Sample-Programs/Hologram$ ./Hologram
INTEL-MESA: warning: Haswell Vulkan support is incomplete
terminate called after throwing an instance of 'std::runtime_error'
  what():  failed to find any capable Vulkan physical device
Aborted (core dumped)
  
----------
